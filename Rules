#!/usr/bin/env ruby

require 'set'


preprocess do
  
  # create tag pages for every tag
  tags = Set.new
  articles.each do |item|
    item[:tags].each do |t|
      tags.add(t)
    end
  end
  LANGUAGES.each do |language|
    tags.each do |tag|
      @items.create(
        "",
        { :id => "tag-#{tag}",
          :language => language,
          :title => "#{LAYOUT_TRANSLATIONS[:tag][language]} &lsquo;#{tag}&rsquo;",
          :tag => tag },
        "/#{language}/blog/tag/#{tag}")
    end
  end
  
  # set language tags on items
  @items.each do |item|
    match = /^\/([a-z]{2}|x-[a-z]+)\/.*/.match(item.identifier)
    if not match == nil then
      item[:language] = match.captures[0]
    end
  end
end


compile '/static/css/bootstrap-3.3.2/less/bootstrap.less' do
    filter :less
end

compile '/static/css/layout.less' do
    filter :less
end

compile '/static/css/homepage.less' do
    filter :less
end

compile '/subsites/**/*' do
end

compile '/*/blog/tag/*' do
  filter :erb
  layout '/tag.html'
end

compile '/*/blog/**/*' do
  if (item.identifier.to_s.end_with? ".html") || (item.identifier.to_s.end_with? ".md")
    if (item[:needs_popups]) then
      filter :popups
    end
    filter :erb
    if item[:extension] == 'md'
      filter :kramdown, :auto_ids => true
    end
    if item[:needs_highlighting]
      filter :colorize_syntax, :default_colorizer => :pygmentsrb
    end
    if item[:layout] == nil then
      layout '/post.html'
    else
      layout '/' + item[:layout] + '.html'
    end
  end
end

compile '/**/*' do
  if (item.identifier.to_s.end_with? ".html") || (item.identifier.to_s.end_with? ".md")
    if (item[:needs_popups]) then
      filter :popups
    end
    filter :erb
    if item[:extension] == 'md'
      filter :kramdown, :auto_ids => true
    end
    if item[:needs_highlighting]
      filter :colorize_syntax, :default_colorizer => :pygmentsrb
    end
    if item[:layout] == nil then
      layout '/page.html'
    else
      layout '/' + item[:layout] + '.html'
    end
  end
end


route '/static/css/bootstrap-3.3.2/less/bootstrap.less' do
    '/static/css/bootstrap.css'
end

route '/static/css/layout.less' do
    '/static/css/layout.css'
end

route '/static/css/homepage.less' do
    '/static/css/homepage.css'
end

route '/static/css/popups.css' do
    '/static/css/popups.css'
end

route '/static/css/**/*' do
    nil
end

route '/subsites/**/*' do
  item.identifier.to_s.sub(/\A\/subsites/, '')
end

route '/*/blog/tag/*' do
  strip_default_language (item.identifier.without_ext + '/index.html')
end

route '/*/blog/**/*' do
  language, y, m, d, slug = /^\/([a-z]{2}|x-[a-z]+)\/blog\/([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+).(html|md)/.match(item.identifier).captures
  
  strip_default_language "/#{language}/blog/#{y}/#{m}/#{slug}/index.html"
end

route '/**/index.*' do
  # /index.md gets written to /index.html
  strip_default_language item.identifier.with_ext('html')
end

route '/**/*' do
  # map non-pages to their exact names, and pages to .../index.html
  if (item.identifier.to_s.end_with? ".html") || (item.identifier.to_s.end_with? ".md")
    strip_default_language (item.identifier.without_ext + '/index.html')
  else
    strip_default_language item.identifier.to_s
  end
end


layout '/**/*', :erb
